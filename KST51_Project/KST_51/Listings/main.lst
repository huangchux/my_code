C51 COMPILER V9.60.7.0   MAIN                                                              09/26/2023 16:47:07 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\keil1\C51\BIN\C51.EXE USER\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER;.\APP\smg;.\APP\time;.\
                    -APP\key) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          typedef unsigned char u8; //对系统默认数据类型进行重命名
   3          #define LED_SMG_PORT  P0  //宏定义数码管端口
   4          
   5          u8 gsmg[10] = {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90}; //数码管1-9
   6          u8 Led_Buff[6] = {0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF}; //数码管缓存区，初值0xFF,确保启动时都不亮
   7          
   8          sbit ADDR0 = P1 ^ 0;
   9          sbit ADDR1 = P1 ^ 1;
  10          sbit ADDR2 = P1 ^ 2;
  11          sbit ADDR3 = P1 ^ 3;
  12          sbit ENLED = P1 ^ 4;
  13          
  14          u8 flag = 0; //定义标志位
  15          
  16          void Time0_Init();
  17          void SMG_Show();
  18          void SMG_Scan();
  19          
  20          
  21          
  22          
  23          
  24          void main()
  25          {
  26   1          ENLED = 0;     //E1 E2低电平有效
  27   1          ADDR3 = 1;     //G1(E3) 使能管脚高电平
  28   1          Time0_Init();
  29   1          while(1)
  30   1          {
  31   2              if(1 == flag)   //判断定时标志
  32   2              {
  33   3                  flag = 0;   //清除中断标志
  34   3                  SMG_Show(); //调用数码管显示函数
  35   3              }
  36   2          }
  37   1      }
  38          void Time0_Init()
  39          {
  40   1          EA = 1;       //开启总中断
  41   1          TMOD &= 0xF0; //设置定时器模式
  42   1          TMOD |= 0x02; //定时器0模式2
  43   1          TH0 = 0xA4;   //100us
  44   1          TL0 = 0xA4;
  45   1          ET0 = 1;      //使能定时器0中断
  46   1          TR0 = 1;      //启动定时器0
  47   1      }
  48          
  49          void SMG_Show() //数码管显示函数
  50          {
  51   1          static u8 min = 1;   //定义初始值
  52   1          static u8 sec = 30;
  53   1          static u8 msec = 30;
  54   1          
C51 COMPILER V9.60.7.0   MAIN                                                              09/26/2023 16:47:07 PAGE 2   

  55   1          if(msec > 0) //如果毫秒大于0
  56   1          {
  57   2            msec--;    //毫秒-1
  58   2            if((msec == 0) && (sec > 0)) //如果毫秒=0且秒大于0
  59   2            {
  60   3              msec = 99;
  61   3              sec--; //秒-1
  62   3              if((sec == 0) && (min > 0)) //如果秒=0且分大于0
  63   3              {
  64   4                sec = 59;
  65   4                min--;
  66   4                if(min == 0) //分=0
  67   4                {
  68   5                  min = 0;   //清零
  69   5      
  70   5                }
  71   4              }
  72   3            }
  73   2          }
  74   1          Led_Buff[0] = gsmg[msec % 10]; //毫秒个位
  75   1          Led_Buff[1] = gsmg[msec / 10]; //毫秒十位
  76   1          Led_Buff[2] = gsmg[sec % 10];  //秒个位
  77   1          Led_Buff[3] = gsmg[sec / 10];  //秒十位
  78   1          Led_Buff[4] = gsmg[min % 10];  //分个位
  79   1          Led_Buff[5] = gsmg[min / 10];  //分十位
  80   1      }
  81          
  82          void SMG_Scan()
  83          {
  84   1        static u8 i = 0;  //动态扫描的索引
  85   1        //以下代码完成数码管动态刷新
  86   1        LED_SMG_PORT = 0xFF; //消隐
  87   1        switch(i)
  88   1        {
  89   2          case 0: ADDR2 = 0; ADDR1 = 0;ADDR0 = 0;i++;LED_SMG_PORT = Led_Buff[0];break;
  90   2          case 1: ADDR2 = 0; ADDR1 = 0;ADDR0 = 1;i++;LED_SMG_PORT = Led_Buff[1];break;
  91   2          case 2: ADDR2 = 0; ADDR1 = 1;ADDR0 = 0;i++;LED_SMG_PORT = Led_Buff[2];break;
  92   2          case 3: ADDR2 = 0; ADDR1 = 1;ADDR0 = 1;i++;LED_SMG_PORT = Led_Buff[3];break;
  93   2          case 4: ADDR2 = 1; ADDR1 = 0;ADDR0 = 0;i++;LED_SMG_PORT = Led_Buff[4];break;
  94   2          case 5: ADDR2 = 1; ADDR1 = 0;ADDR0 = 1;i=0;LED_SMG_PORT = Led_Buff[5];break;
  95   2          default: break;
  96   2        }
  97   1      }
  98          
  99          void time0() interrupt 1
 100          {
 101   1          static u8 count = 0; //记录中断次数
 102   1          TH0 = 0xA4;  //重载初值
 103   1          TL0 = 0xA4;
 104   1          count++;     //中断计数+1
 105   1          if(count > 100)
 106   1          {
 107   2              count = 0; //溢出中断清0
 108   2              flag = 1;  //设置中断标志位
 109   2          }
 110   1          SMG_Scan();    //数码管扫描函数
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.7.0   MAIN                                                              09/26/2023 16:47:07 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
