C51 COMPILER V9.60.7.0   UART                                                              11/11/2023 13:00:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: E:\keil1\C51\BIN\C51.EXE USER\uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER;.\USER;.\USER\iic;.\USE
                    -R\EEPROM;.\USER\time;.\USER\DS18B20;.\USER\DS1302;.\USER\ired) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJ
                    -ECT(.\Objects\uart.obj)

line level    source

   1          #include "AllHead.h"
   2          /*******************************************************************************
   3          * 函 数 名 : uart_init
   4          * 函数功能 : 串口通信中断配置函数，通过设置 TH 和 TL 即可确定定时时间
   5          * 输 入 : baud：波特率对应的 TH、TL 装载值
   6          * 输 出 : 无
   7          *******************************************************************************/
   8          /*void UART_Init(u8 baud)
   9          {
  10            TMOD |= 0X20;  //设置计数器工作方式2  0010 0000 --> 0x20
  11            SCON = 0X50;   //设置为工作方式1      0101 0000 --> 0x50
  12            PCON = 0X80;   //波特率加倍           1000 0000 --> 0x80
  13            TH1 = baud;    //计数器初始值设置(使用小工具)
  14            TH1 = baud;
  15            ES = 1;        //打开接收中断
  16            EA = 1;        //打开总中断
  17            TR1 = 1;       //打开计数器
  18          }*/
  19          /*void UART_SendByte(u8 Byte)  //写数据到SBUF 
  20          {
  21            SBUF = Byte;  //将数据写入串口数据缓存寄存器
  22            while(!TI);   //等待发送数据完成 TI=1即为发送完成 (发送完成 TI 会自动置1，!1为 0 则跳出循环)
  23            TI = 0;    //串行发送停止位的开始时，内部硬件会将TI置1，要清除发送完成标志位，需要清0，取消此中断申请
  24          }*/
  25          /*void uart() interrupt 4  //串口通信中断服务函数 (接收数据需要使用中断)
  26          {
  27            if(RI == 1)      //如果接收标志位为1，接收到了数据
  28            { 
  29              //当接收到数据的时候，让控制led的P2端口等于串口数据缓冲寄存器中的值，从而实现串口控制led灯
  30              LED_PORT = ~SBUF;    //因为0为灯亮，所以要取反
  31              UART_SendByte(SBUF); //将收到的数据发回串口
  32              RI = 0;   //串行接收停止位的中间时，内部硬件会将RI置1，要清除接收中断标志位，需要清0，取消此中断申请
  33            }
  34          }*/
  35          
  36          //void uart() interrupt 4  //串口通信中断服务函数
  37          //{
  38          //  u8 rec_data; 
  39          //  RI = 0;     //串行接收停止位的中间时，内部硬件会将RI置1，要清除接收中断标志位，需要清0，取消此中断申请
  40          //  rec_data = SBUF;    //存储接收到的数据
  41          //  SBUF = rec_data;    //将接收到的数据放入到发送寄存器
  42          //  while(!TI);         //等待发送数据完成(发送完成 TI 会自动置1，!1为 0 则跳出循环)
  43          //  TI = 0;     //串行发送停止位的开始时，内部硬件会将TI置1，要清除发送完成标志位，需要清0，取消此中断申请
  44          //}
  45          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.60.7.0   UART                                                              11/11/2023 13:00:54 PAGE 2   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
