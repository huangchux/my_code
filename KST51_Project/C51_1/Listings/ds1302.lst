C51 COMPILER V9.60.7.0   DS1302                                                            11/11/2023 13:00:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: E:\keil1\C51\BIN\C51.EXE USER\DS1302\ds1302.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USER;.\USER;.\USER\
                    -iic;.\USER\EEPROM;.\USER\time;.\USER\DS18B20;.\USER\DS1302;.\USER\ired) DEBUG OBJECTEXTEND PRINT(.\Listings\ds1302.lst) 
                    -TABS(2) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include "AllHead.h"
   2          
   3          ////---DS1302写入和读取时分秒的地址命令---//
   4          ////---秒分时日月周年 最低位读写位;-------//
   5          //u8 gWRITE_addr[7] = {0x80,0x82,0x84,0x86,0x88,0x8a,0x8c};//数据可查看各类寄存器
   6          //u8 gRREAD_addr[7] = {0x81,0x83,0x85,0x87,0x89,0x8b,0x8d};
   7          
   8          ////---DS1302时钟初始化2023年8月8日星期二17点25分47秒。---//
   9          ////---存储顺序是秒分时日月周年,存储格式是用BCD码---//
  10          //u8 gDS1302_TIME[7] = {0x01,0x34,0x18,0x08,0x08,0x02,0x23};
  11          
  12          ///*******************************************************************************
  13          //* 函 数 名       : ds1302_write_byte
  14          //* 函数功能         : DS1302写单字节
  15          //* 输    入       : addr：地址/命令
  16          //                   dat：数据
  17          //* 输    出       : 无
  18          //*******************************************************************************/
  19          //void ds1302_write_byte(u8 addr,u8 dat)
  20          //{
  21          //  u8 i = 0;
  22          //  DS1302_CE = 0;    //首先CE输出低电平
  23          //  _nop_();          //延时1us
  24          //  DS1302_SCLK = 0;  //SCLK也输出低电平
  25          //  _nop_();
  26          //  DS1302_CE = 1;    //在读写过程，CE要保持高电平
  27          //  _nop_();
  28          //  
  29          //  for(i = 0;i < 8;i++)  //循环8次，每次写1位，先写低位再写高位
  30          //  {
  31          //    DS1302_IO = addr & 0x01; //取出控制寄存器地址的最低位赋给DS1302的IO口
  32          //    addr >>= 1;              //将控制寄存器地址的次低位移到最低位
  33          //    DS1302_SCLK = 1;         //SCLK由低到高产生一个上升沿，从而写入数据
  34          //    _nop_();
  35          //    DS1302_SCLK = 0;         //SCLK先拉低，以便下一次上升沿
  36          //    _nop_();
  37          //  }
  38          //  for(i = 0;i < 8;i++) //循环8次，每次写1位，先写低位再写高位
  39          //  {
  40          //    DS1302_IO = dat & 0x01; //取出写入数据的最低位赋给DS1302的IO口
  41          //    dat >>= 1;              //将数据的次低位移到最低位
  42          //    DS1302_SCLK = 1;        //SCLK由低到高产生一个上升沿，从而写入数据
  43          //    _nop_();                //延时1us
  44          //    DS1302_SCLK = 0;        //SCLK先拉低，以便下一次上升沿
  45          //    _nop_();
  46          //  }
  47          //  DS1302_CE = 0; //RST拉低
  48          //  _nop_();
  49          //}
  50          
  51          ///*******************************************************************************
  52          //* 函 数 名       : ds1302_read_byte
  53          //* 函数功能         : DS1302读单字节
C51 COMPILER V9.60.7.0   DS1302                                                            11/11/2023 13:00:55 PAGE 2   

  54          //* 输    入       : addr：地址/命令
  55          //* 输    出       : 读取的数据
  56          //*******************************************************************************/
  57          //u8 ds1302_read_byte(u8 addr)
  58          //{
  59          //  u8 i = 0;
  60          //  u8 temp = 0; //接收数据中一个位的变量
  61          //  u8 dat = 0;  //将接收到的数据存放到这个变量
  62          //  
  63          //  DS1302_CE = 0;    //首先CE输出低电平
  64          //  _nop_();          //延时1us
  65          //  DS1302_SCLK = 0;  //SCLK也输出低电平
  66          //  _nop_();
  67          //  DS1302_CE = 1;    //在读写过程，CE要保持高电平
  68          //  _nop_();
  69          //  
  70          //  for(i = 0;i < 8;i++)  //循环8次，每次写1位，先写低位再写高位
  71          //  {
  72          //    DS1302_IO = addr & 0x01; //取出控制寄存器地址的最低位赋给DS1302的IO口
  73          //    addr >>= 1;              //将控制寄存器地址的次低位移到最低位
  74          //    DS1302_SCLK = 1;         //SCLK由低到高产生一个上升沿，从而写入数据
  75          //    _nop_();
  76          //    DS1302_SCLK = 0;         //SCLK先拉低，以便下一次上升沿
  77          //    _nop_();
  78          //  }
  79          //  for(i = 0;i < 8;i++) //循环8次，每次读1位，先读低位再读高位
  80          //  {
  81          //    temp = DS1302_IO;  //将在IO口接收到的数据中的一位存放到temp变量中
  82          //    dat = (temp << 7) | (dat >> 1); //先将dat右移1位，然后temp左移7位，最后或运算(或运算中或符号后面的数据
             -优先级比较高)
  83          //    DS1302_SCLK = 1;         
  84          //    _nop_();
  85          //    DS1302_SCLK = 0;         //SCLK由高到低产生一个下降沿，从而读入数据
  86          //    _nop_();
  87          //  }
  88          //  DS1302_CE = 0; //CE拉低
  89          //  _nop_();
  90          //  DS1302_SCLK = 1; //对于实物中，P3.4口没有外接上拉电阻的，此处代码需要添加，使数据口有一个上升沿脉冲
  91          //  _nop_();
  92          //  DS1302_IO = 0;  
  93          //  _nop_();
  94          //  DS1302_IO = 1;  //读取字节之前，将 IO 设置为输入口，读取完之后，要将其改回输出口
  95          //  _nop_();
  96          //  return dat;  //将读取到的数据返回出去
  97          //}
  98          
  99          ///*******************************************************************************
 100          //* 函 数 名       : ds1302_init
 101          //* 函数功能         : DS1302初始化时间
 102          //* 输    入       : 无
 103          //* 输    出       : 无
 104          //*******************************************************************************/
 105          //void ds1302_init(void)
 106          //{
 107          //  u8 i = 0;
 108          //  ds1302_write_byte(0x8E,0X00); //关闭写保护(写保护寄存器的地址为0x8E,WP为其中的最高位，WP为0即为关闭写保
             -护)
 109          //  for(i = 0;i < 7;i++)
 110          //  {
 111          //    ds1302_write_byte(gWRITE_addr[i],gDS1302_TIME[i]);
 112          //  }
 113          //  ds1302_write_byte(0x8E,0X80); //打开写保护，以防止意外修改DS1302内部寄存器(WP为1即为打开写保护)
C51 COMPILER V9.60.7.0   DS1302                                                            11/11/2023 13:00:55 PAGE 3   

 114          //}
 115          
 116          ///*******************************************************************************
 117          //* 函 数 名       : ds1302_read_time
 118          //* 函数功能         : DS1302读取时间
 119          //* 输    入       : 无
 120          //* 输    出       : 无
 121          //*******************************************************************************/
 122          //void ds1302_read_time(void)
 123          //{
 124          //  u8 i = 0;
 125          //  for(i = 0;i < 7;i++)
 126          //  {
 127          //    gDS1302_TIME[i] = ds1302_read_byte(gRREAD_addr[i]);
 128          //  }
 129          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
