C51 COMPILER V9.60.7.0   EEPROM                                                            10/24/2023 16:02:05 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\EEPROM.obj
COMPILER INVOKED BY: E:\keil1\C51\BIN\C51.EXE APP\EEPROM.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\APP;.\USER) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\EEPROM.lst) TABS(2) OBJECT(.\Objects\EEPROM.obj)

line level    source

   1          //#include "AllHead.h"
   2          
   3          ///* E2 读取函数，buf-数据接收指针，addr-E2 中的起始地址，len-读取长度 */
   4          //void EEPROM_Read(u8 *buf, u8 addr, u8 len)
   5          //{
   6          //  do                       //用寻址操作查询当前是否可进行读写操作
   7          //  {
   8          //    I2C_Start();           //写命令(寻找从机) 最后一位为0表示主机向从机写数据
   9          //    if(I2C_Write(0xA0))    //应答则跳出循环，非应答则进行下一次查询
  10          //    {                      //应答返回1符合if条件然后break跳出循环
  11          //      break;               //非应答返回0则一直在do while循环里面一直等到应答
  12          //    }
  13          //    I2C_Stop();
  14          //  }while(1);
  15          //  I2C_Write(addr);         //写入起始地址
  16          //  I2C_Start();             //发送重复启动信号
  17          //  I2C_Write(0xA1);         //进入接收模式   最后一位为1表示主机由从机读数据
  18          //  while(len > 1)           //连续读取 len-1 个字节
  19          //  {
  20          //    *buf++ = I2C_ReadACK();//最后字节之前为读取操作+应答
  21          //    len--;
  22          //  }
  23          //  *buf = I2C_ReadNACK();   //最后一个字节为读取操作+非应答
  24          //  I2C_Stop();              //产生一个停止条件
  25          //}
  26          
  27          ///* E2 写入函数，buf-源数据指针，addr-E2 中的起始地址，len-写入长度 */
  28          //void EEPROM_Write(u8 *buf, u8 addr, u8 len)
  29          //{
  30          //  while(len > 0)
  31          //  {
  32          //    //等待上次写入操作完成
  33          //    do                       //用寻址操作查询当前是否可进行读写操作
  34          //    {
  35          //      I2C_Start();           //写命令(寻找从机) 最后一位为0表示主机向从机写数据
  36          //      if(I2C_Write(0xA0))    //应答则跳出循环，非应答则进行下一次查询
  37          //      {                      //应答返回1符合if条件然后break跳出循环
  38          //        break;               //非应答返回0则一直在do while循环里面一直等到应答
  39          //      }
  40          //      I2C_Stop();
  41          //    }while(1);
  42          //    //按页写模式连续写入字节
  43          //    I2C_Write(addr);           //写入起始地址
  44          //    while(len > 0)
  45          //    {
  46          //      I2C_Write(*buf++);       //写入一个字节数据
  47          //      len--;                   //待写入长度计数递减
  48          //      addr++;                  //E2 地址递增
  49          //      if(0 == (addr & 0x07))   //检查地址是否到达页边界，24C02 每页 8 字节，
  50          //      {                        //所以检测低 3 位是否为零即可
  51          //        break;                 //到达页边界时，跳出循环，结束本次写操作
  52          //      }
  53          //    }
  54          //    I2C_Stop();                //产生一个停止条件
C51 COMPILER V9.60.7.0   EEPROM                                                            10/24/2023 16:02:05 PAGE 2   

  55          //  }
  56          //}
  57          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
